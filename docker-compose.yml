#
# Welcome to Magento 2 Docker Configuration
#  _ __ ___   __ _  __ _  ___ _ __ __  __
# | '_ ` _ \ / _` |/ _` |/ _ \ '_ \\ \/ /
# | | | | | | (_| | (_| |  __/ | | |>  < 
# |_| |_| |_|\__,_|\__, |\___|_| |_/_/\_\
#                   __/ |                
#                  |___/                 
#
# This config was created by magenx.com
# If you have any questions or need help
# please dont hesitate to contact us at:
#
# [admin email]: admin@magenx.com
# [website url]: https://www.magenx.com
#


# # ---------------------------------------------------------------------------------------------------------------------#
#  Configure reusable arguments
# # ---------------------------------------------------------------------------------------------------------------------#
x-magento: &magento
    BRAND:
    DOMAIN:
    PHP_USER:
    ADMIN_PATH:
    MAGENTO_ROOT_PATH:
    PHP_VERSION:
    TIMEZONE:

# # ---------------------------------------------------------------------------------------------------------------------#
#  Configure logger driver
# # ---------------------------------------------------------------------------------------------------------------------#
x-logger: &logger
        logging:
            driver: syslog
            options:
                syslog-address: "unixgram:///dev/log"
                mode: non-blocking
                tag: "[ {{.Name}} ]"
                
# # ---------------------------------------------------------------------------------------------------------------------#
#  Configure ulimits
# # ---------------------------------------------------------------------------------------------------------------------#
x-ulimits: &ulimits
        ulimits:
            memlock:
               soft: -1
               hard: -1
            nofile:
               soft: 65536
               hard: 65536

# # ---------------------------------------------------------------------------------------------------------------------#
#  Configure capabilities
# # ---------------------------------------------------------------------------------------------------------------------#
x-cap_add: &cap_add
        cap_add:
            - SYS_PTRACE

services:
# # ---------------------------------------------------------------------------------------------------------------------#
#  MariaDB is a high performing open source relational database
# # ---------------------------------------------------------------------------------------------------------------------#
    mariadb:
        image: mariadb:${MARIADB_VERSION}
        container_name: ${BRAND}-mariadb
        hostname: mariadb
        environment:
            - MARIADB_AUTO_UPGRADE
            - MARIADB_DISABLE_UPGRADE_BACKUP
            - MARIADB_RANDOM_ROOT_PASSWORD
            - MARIADB_DATABASE
            - MARIADB_USER
            - MARIADB_PASSWORD
            - TIMEZONE
        command: >
            --key_buffer_size=16M
            --myisam-recover-options=FORCE,BACKUP
            --innodb=force
            --max_allowed_packet=250M
            --max_connect_errors=100000
            --bind-address=mariadb
            --skip-name-resolve
            --back_log=20
            --interactive_timeout=7200
            --wait_timeout=7200
            --net_read_timeout=120
            --net_write_timeout=300
            --sort_buffer_size=1M
            --read_buffer_size=1M
            --read_rnd_buffer_size=1M
            --join_buffer_size=1M
            --tmp_table_size=128M
            --max_heap_table_size=128M
            --max_connections=150
            --thread_cache_size=32
            --thread_pool_size=16
            --open_files_limit=65535
            --table_definition_cache=4000
            --table_open_cache=4000
            --innodb_lock_wait_timeout=7200
            --innodb_flush_method=O_DIRECT
            --innodb_flush_log_at_trx_commit=2
            --innodb_log_file_size=128M
            --innodb_log_buffer_size=8M
            --innodb_file_per_table=1
            --innodb_read_io_threads=8
            --innodb_write_io_threads=8
            --innodb_buffer_pool_size=2G
            --log_error=/var/log/mysqld.log
            --skip-log-bin
            --disable-log-bin
        ports:
            - "127.0.0.1:3306:3306"
        restart: always
        volumes:
            - mariadb:/var/lib/mysql
        cpu_shares: 1024
        mem_limit: 2048m
        mem_reservation: 512m
        oom_kill_disable: true
        healthcheck:
            test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized", "--innodb_buffer_pool_loaded"]
            start_period: 10s
            interval: 10s
            timeout: 5s
            retries: 3
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#  Opensearch is a powerful open source search and analytics engine
# # ---------------------------------------------------------------------------------------------------------------------#
    opensearch:
        build:
            context: ./opensearch
            args:
              OPENSEARCH_VERSION:
        container_name: ${BRAND}-opensearch
        hostname: opensearch
        environment:
            - cluster.name=${BRAND}-cluster
            - node.name=${BRAND}-node1
            - node.attr.rack=${BRAND}-rack1
            - discovery.type=single-node
            - bootstrap.memory_lock=true
            - plugins.security.ssl.transport.enforce_hostname_verification=false
            - plugins.security.ssl.http.enabled=false
            - plugins.security.allow_unsafe_democertificates=true
            - plugins.security.allow_default_init_securityindex=true
            - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
            - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_PASSWORD}
        ports:
            - "127.0.0.1:9200:9200"
            - "127.0.0.1:9300:9300"
        restart: always
        volumes:
            - opensearch:/usr/share/opensearch/data
        cpu_shares: 1024
        mem_limit: 2048m
        mem_reservation: 512m
        oom_kill_disable: true
        healthcheck:
            test: ["CMD-SHELL", "curl -XGET -u admin:${OPENSEARCH_PASSWORD} 'http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=15s' || exit 1"]
            start_period: 15s
            interval: 15s
            timeout: 5s
            retries: 3
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#  Redis is an open source key-value store that functions as a data structure server.
# # ---------------------------------------------------------------------------------------------------------------------#
    redis-cache:
        image: &redis_image redis:${REDIS_VERSION}-alpine
        container_name: ${BRAND}-redis-cache
        hostname: redis-cache
        command: >
            --bind redis-cache
            --port 6380
            --save ""
            --loglevel warning
            --requirepass ${REDIS_PASSWORD}
            --maxmemory ${REDIS_CACHE_MEMORY}
            --maxmemory-policy allkeys-lru
            --lazyfree-lazy-eviction yes
            --lazyfree-lazy-expire yes
            --lazyfree-lazy-server-del yes
            --replica-lazy-flush yes
            --lazyfree-lazy-user-del yes
        ports:
            - "127.0.0.1:6380:6380"
        restart: always
        cpu_shares: 614
        mem_limit: 1024mb
        mem_reservation: 128m
        oom_kill_disable: true
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#  Redis is an open source key-value store that functions as a data structure server.
# # ---------------------------------------------------------------------------------------------------------------------#
    redis-session:
        image: *redis_image
        container_name: ${BRAND}-redis-session
        hostname: redis-session
        command: >
            --bind redis-session
            --port 6379
            --save 300 15
            --requirepass ${REDIS_PASSWORD}
            --maxmemory ${REDIS_SESSION_MEMORY}
            --maxmemory-policy allkeys-lru
            --lazyfree-lazy-eviction yes
            --lazyfree-lazy-expire yes
            --lazyfree-lazy-server-del yes
            --replica-lazy-flush yes
            --lazyfree-lazy-user-del yes
        ports:
            - "127.0.0.1:6379:6379"
        restart: always
        volumes:
            - redis:/data
        cpu_shares: 614
        mem_limit: 1024mb
        mem_reservation: 128m
        oom_kill_disable: true
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#  RabbitMQ is an open source multi-protocol messaging broker
# # ---------------------------------------------------------------------------------------------------------------------#                
    rabbitmq:
        image: rabbitmq:${RABBITMQ_VERSION}-alpine
        container_name: ${BRAND}-rabbitmq
        hostname: rabbitmq
        environment:
            - RABBITMQ_DEFAULT_USER=rabbitmq_${BRAND}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
        restart: always
        ports:
            - "127.0.0.1:5672:5672"
        volumes:
            - rabbitmq:/var/lib/rabbitmq
        cpu_shares: 614
        mem_limit: 512m
        mem_reservation: 128m
        oom_kill_disable: true
        << : [*ulimits, *logger]
                
                
# # ---------------------------------------------------------------------------------------------------------------------#
#  Varnish is an HTTP accelerator designed for content-heavy dynamic web sites as well as APIs.
# # ---------------------------------------------------------------------------------------------------------------------#                  
    varnish:
        build:
            context: ./varnish
            args:
              VARNISH_VERSION:
              VARNISH_CACHE_SIZE:
              TIMEZONE:
        container_name: ${BRAND}-varnish
        hostname: varnish
        restart: always
        depends_on:
            - nginx
            - php
        ports:
            - "127.0.0.1:8081:8081"
            - "127.0.0.1:6082:6082" 
        user: varnish
        cpu_shares: 614
        mem_limit: 1024m
        mem_reservation: 128m
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#  Configure container to run php and php-fpm
# # ---------------------------------------------------------------------------------------------------------------------#    
    php:
        build:
            context: ./php
            args:
              <<: *magento
              ALPINE_VERSION:
        container_name: ${BRAND}-php
        environment: &phpenv
            - MARIADB_DATABASE
            - MARIADB_USER
            - MARIADB_PASSWORD
            - REDIS_PASSWORD
            - INDEXER_PASSWORD
            - DOMAIN
            - ADMIN_PATH
            - CRYPT_KEY
            - RABBITMQ_PASSWORD
            - BRAND
        hostname: php
        restart: always
        depends_on:
            mariadb:
                condition: service_healthy
        ports:
            - "127.0.0.1:9000:9000"
        volumes:
            - ${MAGENTO_ROOT_PATH}/current:${MAGENTO_ROOT_PATH}/public_html:ro
            - ${MAGENTO_ROOT_PATH}/shared/pub/media:${MAGENTO_ROOT_PATH}/public_html/pub/media:rw
            - ${MAGENTO_ROOT_PATH}/shared/var:${MAGENTO_ROOT_PATH}/public_html/var:rw
        user: ${PHP_USER}
        working_dir: ${MAGENTO_ROOT_PATH}/public_html
        entrypoint: ["php-fpm${PHP_VERSION}", "-F"]
        cpu_shares: 1024
        mem_limit: 2048m
        mem_reservation: 512m
        << : [*ulimits, *cap_add, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#  Nginx is an open source reverse proxy server for HTTP, HTTPS
# # ---------------------------------------------------------------------------------------------------------------------#                   
    nginx:
        build:
            context: ./nginx
            args: *magento
        container_name: ${BRAND}-nginx
        hostname: nginx
        restart: always
        depends_on:
            mariadb:
                condition: service_healthy
            php:
                condition: service_started
        ports:
            - "80:80"
            - "443:443"
            - "127.0.0.1:8080:8080"
        volumes:
            - ${MAGENTO_ROOT_PATH}/current:${MAGENTO_ROOT_PATH}/public_html:ro
            - ${MAGENTO_ROOT_PATH}/shared/pub/media:${MAGENTO_ROOT_PATH}/public_html/pub/media:ro
            - ${MAGENTO_ROOT_PATH}/shared/var:${MAGENTO_ROOT_PATH}/public_html/var:ro
            - ssl:/etc/ssl
            - certbot:/etc/letsencrypt:ro
            - phpmyadmin:/var/www/html:ro
        working_dir: ${MAGENTO_ROOT_PATH}
        user: ${BRAND}
        cpu_shares: 614
        mem_limit: 512m
        mem_reservation: 128m
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#  phpMyAdmin - A web interface for MariaDB
# # ---------------------------------------------------------------------------------------------------------------------#  
    phpmyadmin:
        image: phpmyadmin:fpm-alpine
        container_name: ${BRAND}-phpmyadmin
        hostname: phpmyadmin
        environment:
            - PMA_ARBITRARY
            - HIDE_PHP_VERSION
            - PMA_HOST
            - PMA_PORT
            - MAX_EXECUTION_TIME
            - MEMORY_LIMIT
            - UPLOAD_LIMIT
            - PMA_PMADB
            - PMA_CONTROLUSER
            - PMA_CONTROLPASS
            - TIMEZONE
        restart: always
        depends_on:
            mariadb:
                condition: service_healthy
            nginx:
                condition: service_started
        ports:
            - "127.0.0.1:9001:9001"
        volumes:
            - phpmyadmin:/var/www/html
        cpu_shares: 614
        mem_limit: 512m
        mem_reservation: 512m
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#   Certbot tool for obtaining TLS/SSL certificates from Let's Encrypt
# # ---------------------------------------------------------------------------------------------------------------------#           
    certbot:
        image: certbot/certbot:latest
        container_name: ${BRAND}-certbot
        volumes:
            - ${MAGENTO_ROOT_PATH}/current/.well-known/acme-challenge/:rw
            - certbot:/etc/letsencrypt
            - certbotlib:/var/lib/letsencrypt
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#   Cron job scheduler run arbitrary commands, or "jobs", according to a schedule
# # ---------------------------------------------------------------------------------------------------------------------# 
    cron:
        build:
            context: ./cron
            args: *setappargs
        container_name: ${BRAND}-cron
        environment: *setphpenv
        depends_on:
            mariadb:
                condition: service_healthy
        volumes:
            - ${MAGENTO_ROOT_PATH}/current:${MAGENTO_ROOT_PATH}/public_html:ro
            - ${MAGENTO_ROOT_PATH}/shared/pub/media:${MAGENTO_ROOT_PATH}/public_html/pub/media:ro
            - ${MAGENTO_ROOT_PATH}/shared/var:${MAGENTO_ROOT_PATH}/public_html/var:rw
        user: ${PHP_USER}
        working_dir: ${MAGENTO_ROOT_PATH}
        command: ["crond", "-f"]
        cpu_shares: 1024
        mem_limit: 2048m
        mem_reservation: 512m
        << : [*ulimits, *logger]


# # ---------------------------------------------------------------------------------------------------------------------#
#   Named volumes list
# # ---------------------------------------------------------------------------------------------------------------------#            
volumes:
    ssl:
    mariadb:
    phpmyadmin:
    opensearch:
    redis:
    rabbitmq:
    certbot:
    certbotlib:


# # ---------------------------------------------------------------------------------------------------------------------#
#   Named networks list
# # ---------------------------------------------------------------------------------------------------------------------# 
networks:
    default:
        name: ${BRAND}

